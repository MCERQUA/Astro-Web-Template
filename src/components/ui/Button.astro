---
// Button.astro - Reusable button component
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
}

const { 
  variant = 'primary', 
  size = 'md', 
  href,
  type = 'button',
  disabled = false,
  class: className = '',
  ...rest 
} = Astro.props;

// Base styles
const baseStyles = 'btn-base inline-flex items-center justify-center font-medium transition-all duration-300 focus-visible';

// Variant styles - Updated for Din√© Insurance brand
const variantStyles = {
  primary: 'bg-red-clay text-soft-white hover:bg-red-clay-dark shadow-md hover:shadow-lg',
  secondary: 'bg-turquoise text-soft-white hover:bg-turquoise-dark shadow-md hover:shadow-lg',
  outline: 'border-2 border-turquoise text-turquoise hover:bg-turquoise hover:text-soft-white'
};

// Size styles
const sizeStyles = {
  sm: 'px-4 py-2 text-sm rounded-md',
  md: 'px-6 py-3 text-base rounded-lg',
  lg: 'px-8 py-4 text-lg rounded-xl'
};

const classes = `${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${className}`;

// Determine if it's a link or button
const isLink = href && !disabled;
---

{isLink ? (
  <a 
    href={href}
    class={classes}
    {...rest}
  >
    <slot />
  </a>
) : (
  <button 
    type={type}
    disabled={disabled}
    class={classes}
    {...rest}
  >
    <slot />
  </button>
)}

<style>
  /* Additional hover effects */
  .btn-base:hover:not(:disabled) {
    transform: translateY(-1px);
  }
  
  .btn-base:active:not(:disabled) {
    transform: translateY(0);
  }
  
  .btn-base:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
</style>
